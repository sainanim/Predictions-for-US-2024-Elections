---
title: "Who will win the US 2024 election?!!"
author:
  - Monica Sainani
  - Kaavya Kalani
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "This study investigates the dynamics of voting behaviour during the US presidential election in 2022 using
 data from the American Community Survey(ACS) 2022 sample.

 We look at the correlation between voting preferences and demographic, socioeconomic, and geographic factors,
 such as age, income, education, state of residency, and gender.

 Our study reveals complex trends and determinants of voting behaviour, providing understanding into the complex
 relationships between personal traits and local factors that influence election results.


 This research contributes to a better understanding of the factors influencing political engagement in American
 democracy by offering insightful information that might guide future electoral strategies and policy discussion."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(rstan)
library(tidyverse)
library(arrow)
library(dplyr)
library(knitr)
library(ggplot2)
library(gutenbergr)
library(haven)
library(labelled)
library(modelsummary)
library(rstanarm)
library(tidybayes)
library(broom.mixed)
library(here)

poststrat_data <- arrow::read_parquet(file = here("data/analysis_data/poststrat_data.parquet"))
survey_data <- arrow::read_parquet(file = here("data/analysis_data/survey_data.parquet"))
us_election_model <- readRDS(file = here("models/single_bay.rds"))
```

# Introduction
A key turning point in the political environment of the United States occurred with the 2022 presidential election,
which was marked by extreme conflict and serious economic and social challenges. We analyze data from the American
Community Survey (ACS) 2022 sample, which offers a thorough understanding of demographic, socioeconomic, and geographic
aspects across the nation, in order to comprehend the patterns underlying voting choices during this 2024 election
period.

Our estimand is the relationship between demographic, socio-economic, and geographic variables (such as age, income,
education, state of residence, and gender) and voting behavior during the 2022 presidential election. Using this
extensive dataset, our goal is to identify trends and factors that influence voting behaviour, clarifying the
complex relationship between personal traits and local factors that influences election results.

Our research adds to a greater understanding of the factors influencing voting decisions through comprehensive
statistical analysis, yielding insightful data that may influence future election campaigns and policy discussions.
Through highlighting the subtleties of voting patterns in the 2022 election, our research provides a critical insight
on the condition of American democracy and the factors motivating involvement in politics and engagement.


# Data

##Introduction to the Data:
With a focus on the American Community Survey (ACS) 2022 sample,
we present a summary of the dataset utilized in our statistical research study in this part.
Using a 1-in-100 national random sample, the ACS 2022 sample provides a thorough overview of the demographic,
socioeconomic, and geographic features of the US population. Most importantly, this dataset includes people who live in
both home and group quarters, offering a comprehensive view of the American population.

Since the ACS 2022 sample is weighted, the data are guaranteed to accurately reflect the demographic makeup of the
country's population. Weighting improves the reliability and accuracy of statistical analyses and conclusions generated
from the dataset by facilitating more precise extrapolation of findings from the sample to the larger population.

The ACS 2022 sample is noteworthy for its geographic structure, where the Public Use Microdata Area (PUMA) is the
smallest recognizable geographic unit.
Geographic areas that do not cross state boundaries and have a population of at least 100,000 are known as PUMAs.
This physical separation makes it easier to analyze regional differences and trends in socioeconomic and demographic
traits, enabling scholars to investigate the subtleties of voting patterns and electoral dynamics throughout the nation.

All things considered, the ACS 2022 sample is a useful tool for statistical analysis and empirical study, providing
insights into the complex aspects of American culture. In the sections that follow, we explore the variables that make
up the dataset and consider how important they are to comprehending voting patterns and electoral results in relation
to the 2022 presidential election.

## Introduction to the Variables
These are the key variables utilized in our statistical analysis of voting behavior during the 2022 presidential
election. These variables are drawn from the American Community Survey (ACS) 2022 sample and encompass demographic,
socio-economic, and geographic characteristics that may influence individuals' voting preferences.

Age: Age is a representation of each candidate's actual age as of the election. A key demographic factor that might
affect voting patterns, generational dynamics, and political opinions is age.

Income: The pre-tax amount of the respondents' families' entire annual income from all sources is shown as income.
As a stand-in for socioeconomic position and financial security, income has the power to influence people's political
choices, attitudes, and worldviews.

Education: Based on the highest year of school or degree earned, respondents' educational attainment is indicated by
their education. knowledge electoral dynamics requires a knowledge of the important variable of educational attainment,
which is directly connected to political ideology, civic participation, and voter turnout.

State: The respondents' state of residence provides information about where their housing units are located and makes
it possible to analyze local politics and voting trends. The political climate, the priorities of policies, and the
demographic makeup of a state can all affect how people vote and how elections turn out.

Sex: The report of sex indicates a person's gender. Political beliefs and actions are greatly influenced by gender
dynamics, which may have an impact on voting patterns and election results.

## Model
We used a Bayesian Logistic Regression model with Post-Stratification to predict the 2024 US Presidential Elections. Logistic regression is a method used for binary classification to predict the probability of a categorical dependent variable. 

For our analysis, a logistic regression model will be first used to model the proportion of the voters who will vote for Biden. The model will be based on five independent demographic variables: state, sex, age, education and income.

The logistic regression model we will be using is:
\begin{equation}
\log\left(\frac{\hat{p}}{1 - \hat{p}}\right) = \beta_0 + \beta_1 \times \text{state} + \beta_2 \times \text{sex} + \beta_3 \times \text{age} + \beta_4 \times \text{education} + \beta_5 \times \text{income} \label{eq:model1}
\end{equation}

where,

- $\hat{p}$ represents the probability that someone will vote for Biden
- $\beta_0$ represents the intercept term of this logistical regression. It is the probability that someone will vote for Biden if the predictors' values are zero
- $\beta_1$ is the coefficient corresponding to state
- $\beta_2$ is the coefficient corresponding to sex
- $\beta_3$ is the coefficients corresponding to age
- $\beta_4$ is the coefficients corresponding to education
- $\beta_5$ is the coefficients corresponding to income

In our model, normal priors with a mean of 0 and a standard deviation of 2.5 are used for both the coeffients and the intercept. Setting the mean of the priors to 0 implies that there is no expectation of a particular direction or magnitude for the coefficients or intercept. We chose this as we have no expectation of the same. The standard deviation of 2.5 reflects the uncertainty or variability in the prior beliefs. We chose a moderately wide prior to allow for a reasonable amount of uncertainty. 

The chosen priors allow the data to largely determine the posterior distribution as they are relatively non-informative. They don't heavily influence the results unless the data provide strong evidence to the contrary.

The use of moderately wide priors can also help regularize the model, preventing overfitting and providing more stable estimates, particularly when dealing with limited data.

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: tbl-model-coefficients
#| tbl-cap: Coefficients of the model

library(modelsummary)
library(kableExtra)

# Create model summary
model_summary <- modelsummary(us_election_model)

# Print model summary in a nice format
print(model_summary)

# Extract coefficients
coefficients <- broom::tidy(us_election_model, conf.int = TRUE)
coefficients |> kable(digits = 2)
```

@tbl-model-coefficients shows the coefficients for our model that can be used in the equation along with the standard error and the 95% confidence interval. The standard error (SE) is a measure of the precision with which a sample statistic estimates a population parameter. It quantifies the variability of sample statistics around the population parameter. A 95% confidence interval means that if you were to take many samples and construct confidence intervals in the same way, approximately 95% of those intervals would contain the true population mean.

After we created the model, we then post-stratify these proportions and to conclude who we predict to win the 2024 US Presidential Elections. Post-stratification is a statistical technique employed to refine survey estimates by aligning them with known population characteristics. It helps us ensure that our findings accurately represent the diversity of the entire population. 

In this process, we first the organize the survey data based on the demographic factors we decided to investigate. This involved counting individuals in each group to understand the sample distribution and computing proportions to depict the relative contribution of each demographic group to the overall survey sample.

Predictive model is then employed to generate probabilities for each demographic group, capturing the nuanced political preferences within distinct strata. These probabilities were summarized by aggregating them within each demographic group. 

Applying this post-stratification process results in enhanced predictions that align with the known population distribution within each stratum. These adjusted values contribute to a more accurate representation of party
votes within specific demographic categories, ensuring our findings are reflective of the broader population.


## Results
```{r}
#| echo: false
#| warning: false
#| message: false

# Calculate proportions by state
proportions_state <- poststrat_data %>%
  group_by(state, sex, age, education, income) %>%
  summarise(n = n()) %>%
  group_by(state) %>%
  mutate(prop = n/sum(n))

# Obtain predictions from the Bayesian model
proportions_state$estimate <- predict(us_election_model, newdata = proportions_state, type = "response")
proportions_state <- proportions_state %>% mutate(num_voters = n*estimate)

# Calculate prediction errors and intervals
errors <- predict(us_election_model, newdata = proportions_state, type = "response", se.fit = TRUE)
upper_state <- errors$fit + errors$se.fit
lower_state <- errors$fit - errors$se.fit
proportion_error_state <- cbind(proportions_state, lower_bound = lower_state, upper_bound = upper_state) %>%
  rename(lower_bound = "lower_bound", upper_bound = "upper_bound")

proportion_error_state <- proportion_error_state %>%
  mutate(lower_estimate = n*lower_bound, upper_estimate = n*upper_bound)

# Calculate votes for Biden
vote_for_biden <- proportion_error_state %>%
  mutate(biden_predict_prop = estimate * prop,
         biden_predict_prop_lower = lower_bound * prop,
         biden_predict_prop_upper = upper_bound * prop) %>%
  group_by(state) %>%
  summarise(biden_predict = sum(biden_predict_prop),
            biden_lower = sum(biden_predict_prop_lower),
            biden_upper = sum(biden_predict_prop_upper))

# Prepare data for plotting
state_final_split <- survey_data %>%
  group_by(state, vote_biden) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

state_vote_for_biden <- inner_join(state_final_split, vote_for_biden, by = "state") %>%
  filter(vote_biden == '1')

# Create the plot
ggplot(state_vote_for_biden, aes(y = biden_predict, x = reorder(state, -biden_predict), color = "MRP estimate")) +
  geom_point() +
  geom_errorbar(aes(ymin = biden_lower, ymax = biden_upper), width = 0) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  labs(
    x = "State",
    y = "Estimated proportion support for Biden",
    color = "Source"
  ) +
  theme_classic() +
  scale_color_brewer(palette = "Set1") +
  coord_flip() +
  theme(legend.position = "bottom")

```

```{r}
#| echo: false
#| warning: false
#| message: false

# Calculate proportions by age
proportions_age <- poststrat_data %>%
  group_by(state, sex, age, education, income) %>%
  summarise(n = n()) %>% 
  group_by(age) %>%
  mutate(prop = n/sum(n))

# Obtain predictions from the Bayesian model
proportions_age$estimate <- predict(us_election_model, newdata = proportions_age, type = "response")
proportions_age <- proportions_age %>% mutate(num_voters = n*estimate)

# Calculate prediction errors and intervals
errors <- predict(us_election_model, newdata = proportions_age, type = "response", se.fit = TRUE)
upper_age <- errors$fit + errors$se.fit
lower_age <- errors$fit - errors$se.fit
proportion_error_age <- cbind(proportions_age, lower_bound = lower_age, upper_bound = upper_age) %>% 
  rename(lower_bound = "lower_bound", upper_bound = "upper_bound")

proportion_error_age <- proportion_error_age %>%
  mutate(lower_estimate = n*lower_bound, upper_estimate = n*upper_bound)

# Calculate votes for Biden
vote_for_biden <- proportion_error_age %>%
  mutate(biden_predict_prop = estimate * prop,
         biden_predict_prop_lower = lower_bound * prop,
         biden_predict_prop_upper = upper_bound * prop) %>%
  group_by(age) %>%
  summarise(biden_predict = sum(biden_predict_prop),
            biden_lower = sum(biden_predict_prop_lower),
            biden_upper = sum(biden_predict_prop_upper))

# Prepare data for plotting
age_final_split <- survey_data %>%
  group_by(age, vote_biden) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

age_vote_for_biden <- inner_join(age_final_split, vote_for_biden, by = "age") %>%
  filter(vote_biden == '1')

# Plotting
ggplot(age_vote_for_biden, aes(x = age, y = biden_predict)) +
  geom_col(fill = "purple") +
  labs(title = "Proportions of Votes for Biden by age group",
       y = "Proportion of Votes",
       x = "Age groups")

```

```{r}
#| echo: false
#| warning: false
#| message: false

# sex
# Calculate proportions by sex
proportions_sex <- poststrat_data %>%
  group_by(state, sex, age, education, income) %>%
  summarise(n = n()) %>% 
  group_by(sex) %>%
  mutate(prop = n/sum(n))

# Obtain predictions from the Bayesian model
proportions_sex$estimate <- predict(us_election_model, newdata = proportions_sex, type = "response")
proportions_sex <- proportions_sex %>% mutate(num_voters = n*estimate)

# Calculate prediction errors and intervals
errors <- predict(us_election_model, newdata = proportions_sex, type = "response", se.fit = TRUE)
upper_sex <- errors$fit + errors$se.fit
lower_sex <- errors$fit - errors$se.fit
proportion_error_sex <- cbind(proportions_sex, lower_bound = lower_sex, upper_bound = upper_sex) %>% 
  rename(lower_bound = "lower_bound", upper_bound = "upper_bound")

proportion_error_sex <- proportion_error_sex %>%
  mutate(lower_estimate = n*lower_bound, upper_estimate = n*upper_bound)

# Calculate votes for Biden
vote_for_biden <- proportion_error_sex %>%
  mutate(biden_predict_prop = estimate* prop,
         biden_predict_prop_lower = lower_bound * prop,
         biden_predict_prop_upper = upper_bound * prop) %>%
  group_by(sex) %>%
  summarise(biden_predict = sum(biden_predict_prop),
            biden_lower = sum(biden_predict_prop_lower),
            biden_upper = sum(biden_predict_prop_upper))

# Prepare data for plotting
sex_final_split <- survey_data %>%
  group_by(sex, vote_biden) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

sex_vote_for_biden <- inner_join(sex_final_split, vote_for_biden, by = "sex") %>%
  filter(vote_biden == '1')

# Plotting
ggplot(sex_vote_for_biden, aes(x = sex, y = biden_predict)) +
  geom_col(fill = "red") +
  labs(title = "Proportions of Votes for Biden by sex",
       y = "Proportion of Votes",
       x = "Sex groups")

```

```{r}
#| echo: false
#| warning: false
#| message: false

# Predictions and intervals from Bayesian model
library(rstan)

general_proportion_data <- poststrat_data |>
  group_by(state, sex, age, education, income) |>
  summarise(n = n()) |>
  mutate(prop = n / sum(n))

# Predictions
general_proportion_data$estimate <- as.vector(predict(us_election_model, newdata = general_proportion_data))

# Prediction Intervals
general_errors <- as.data.frame(predict(us_election_model, newdata = general_proportion_data, se.fit = TRUE))
general_proportion_data$lower_bound <- general_errors$fit - general_errors$se.fit
general_proportion_data$upper_bound <- general_errors$fit + general_errors$se.fit

# Summarize predictions for Biden
general_vote_for_biden <- general_proportion_data %>%
  summarise(biden_predict = sum(estimate * prop),
            biden_lower = sum(lower_bound * prop),
            biden_upper = sum(upper_bound * prop))

# Plotting
general_data <- survey_data %>%
  group_by(vote_biden) %>%
  summarise(n = n()) %>%
  mutate(prop = n / sum(n))

ggplot(general_data, aes(x = as.factor(vote_biden), y = prop)) +
  geom_col(fill = "blue") +
  labs(title = "Proportions of Votes",
       y = "Proportion",
       x = "Vote") +
  scale_x_discrete(labels = c("Vote for Biden", "Will not vote for Biden"))

```